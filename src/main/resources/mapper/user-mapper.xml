<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace要指向接口-->
<mapper namespace="com.nowcoder.community.dao.UserMapper">
<!--User要写全包名，但properties已经配置过实体类的包了-->
    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>
    
    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <select id="selectById" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where id = #{id}
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>

    <!--keyProperty是指User实体类中的主键名，mybatis会获取数据库中自增的id，填入User中的id中-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into User (<include refid="insertFields"></include>)
        values(#{username}, #{password},#{salt},#{email},#{type},#{status},#{activationCode},#{headerUrl},#{createTime})
    </insert>

    <update id="updateStatus">
        update User set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update User set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update User set password = #{password} where id = #{id}
    </update>
</mapper>